import React, { useState, useEffect } from 'react';
import { update{{ entity_name }} } from '../services/{{ entity_name.lower() }}Service';

function Update{{ entity_name }}({ match }) {
    const [formData, setFormData] = useState({
        {% for prop in properties.keys() %}
        {{ prop }}: '',
        {% endfor %}
    });
    const [message, setMessage] = useState('');

    useEffect(() => {
        // Aqui vocÃª pode carregar os dados existentes para o {{ entity_name }}
    }, []);

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await update{{ entity_name }}(match.params.id, formData);
            setMessage(response.message);
        } catch (error) {
            setMessage('Erro ao atualizar {{ entity_name }}');
        }
    };

    return (
        <div>
            <h2>Atualizar {{ entity_name }}</h2>
            {% if figma_components %}
                {% for component_name, component_html in figma_components.items() %}
                <div dangerouslySetInnerHTML={{ __html: "{{ component_html | safe }}" }} />
                {% endfor %}
            {% else %}
                <form onSubmit={handleSubmit}>
                    {% for prop in properties.keys() %}
                    <label>{{ prop.capitalize() }}:</label>
                    <input
                        type="text"
                        name="{{ prop }}"
                        value={formData.{{ prop }}}
                        onChange={handleChange}
                    />
                    {% endfor %}
                    <button type="submit">Atualizar</button>
                </form>
            {% endif %}
            {message && <p>{message}</p>}
        </div>
    );
}

export default Update{{ entity_name }};